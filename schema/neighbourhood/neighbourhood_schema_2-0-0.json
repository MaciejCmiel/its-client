{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://Orange-OpenSource.github.io/its-client/schema/neighbourhood",
  "description": "Neighbourhood JSON schema",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "message_type",
    "source_uuid",
    "timestamp",
    "version",
    "neighbours"
  ],
  "properties": {
    "message_type": {
      "description": "The type of schema for this object",
      "type": "string",
      "const": "neighbourhood"
    },
    "source_uuid": {
      "type": "string",
      "description": "identifier",
      "examples": [
        "UNKNOWN",
        "42"
      ]
    },
    "timestamp": {
      "type": "integer",
      "description": "Unit: millisecond. The timestamp when the message was generated since Unix Epoch (1970/01/01).",
      "examples": [
        1574778515424
      ],
      "minimum": 1514764800000,
      "maximum": 1830297600000
    },
    "version": {
      "description": "The version of the schema for this object",
      "type": "string",
      "const": "2.0.0"
    },
    "neighbours": {
      "description": "The list of neighbours of an instance",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "$ref": "#/$defs/mqtt_neighbour"
          }
        ]
      }
    }
  },
  "$defs": {
    "basic_neighbour": {
      "type": "object",
      "required": [
        "neighbour_type",
        "border_definition"
      ],
      "properties": {
        "neighbour_type": {
          "description": "Type of connection to use to that neighbour",
          "type": "string"
        },
        "border_definition": {
          "description": "Information on how to compute the bordering with a neighbour",
          "oneOf": [
            {
              "$ref": "#/$defs/whole_neighbour_border"
            },
            {
              "$ref": "#/$defs/area_border"
            }
          ]
        }
      }
    },
    "mqtt_neighbour": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_neighbour"
        },
        {
          "type": "object",
          "required": [
            "host",
            "preferred_protocols",
            "prefix",
            "suffix",
            "queue"
          ],
          "properties": {
            "neighbour_type": {
              "const": "mqtt"
            },
            "host": {
              "description": "Hostname of MQTT broker to connect to",
              "type": "string"
            },
            "preferred_protocols": {
              "description": "The list of protocols this neighbour listens on, ordered by preference",
              "type": "array",
              "minItems": 1,
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/$defs/mqtt_protocol"
                  },
                  {
                    "$ref": "#/$defs/mqtts_protocol"
                  },
                  {
                    "$ref": "#/$defs/ws_protocol"
                  },
                  {
                    "$ref": "#/$defs/wss_protocol"
                  }
                ]
              }
            },
            "prefix": {
              "description": "Prefix (namespace) of the MQTT topics to subscribe to and publish on",
              "type": "string"
            },
            "suffix": {
              "description": "Suffix of the MQTT topics to subscribe to and publish on",
              "type": "string"
            },
            "queue": {
              "description": "Queue of the MQTT topics to subscribe to and publish on",
              "type": "string"
            }
          }
        }
      ]
    },
    "basic_protocol": {
      "type": "object",
      "required": [
        "protocol_type"
      ],
      "properties": {
        "protocol_type": {
          "type": "string"
        }
      }
    },
    "mqtt_protocol": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_protocol"
        },
        {
          "description": "Neighbour listening on insecure (plain) MQTT",
          "type": "object",
          "required": [
            "port"
          ],
          "properties": {
            "protocol_type": {
              "const": "mqtt"
            },
            "port": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "mqtts_protocol": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_protocol"
        },
        {
          "description": "Neighbour listening on MQTT over TLS",
          "type": "object",
          "required": [
            "port"
          ],
          "properties": {
            "protocol_type": {
              "const": "mqtts"
            },
            "port": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "ws_protocol": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_protocol"
        },
        {
          "description": "Neighbour listening on MQTT over Websockets over TLS",
          "type": "object",
          "required": [
            "port",
            "path"
          ],
          "properties": {
            "protocol_type": {
              "const": "ws"
            },
            "port": {
              "type": "integer"
            },
            "path": {
              "type": "string"
            }
          }
        }
      ]
    },
    "wss_protocol": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_protocol"
        },
        {
          "description": "Neighbour listening on MQTT over Websockets over TLS",
          "type": "object",
          "required": [
            "port",
            "path"
          ],
          "properties": {
            "protocol_type": {
              "const": "wss"
            },
            "port": {
              "type": "integer"
            },
            "path": {
              "type": "string"
            }
          }
        }
      ]
    },
    "basic_border_definition": {
      "type": "object",
      "required": [
        "border_type"
      ],
      "properties": {
        "border_type": {
          "type": "string"
        }
      }
    },
    "whole_neighbour_border": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_border_definition"
        },
        {
          "description": "Retrieve all messages of the neighbours",
          "type": "object",
          "properties": {
            "border_type": {
              "const": "whole"
            }
          }
        }
      ]
    },
    "area_border": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/$defs/basic_border_definition"
        },
        {
          "description": "Consider messages corresponding to an area border",
          "type": "object",
          "required": [
            "quadkeys_depth",
            "border_width"
          ],
          "properties": {
            "border_type": {
              "const": "area"
            },
            "quadkeys_depth": {
              "description": "The depth of the quadkeys to use to compute the border",
              "type": "integer",
              "minimum": 1
            },
            "border_width": {
              "description": "The width of the border, in quadkeys",
              "type": "integer",
              "minimum": 1
            }
          }
        }
      ]
    }
  }
}
